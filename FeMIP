#!/bin/bash

# FeMIP will remap desired model file(s) to a 1x1 regular horizontal grid with a vertical
# grid corresponding to the WOA01 (default) or a custom vertical grid (refer to makegrid).
# If you wish to use a custom grid, run makegrid before FeMIP else this will generate an error.
# The FeMIP script uses CDO and thus requires that certain variables and attributes, such as 
# longitude and latitude, be in a specific format. Refer to README.txt for some useful CDO and 
# NCO processing commands, else refer to CDO documentation at https://code.mpimet.mpg.de/projects/cdo/embedded/cdo.pdf
# 
# FeMIP requires the user to specify the file(s) to be processed as well as the vertical grid of choice
#
# Author: Jonathan J Rogerson (UCT)
# Contributor(s): M. Vichi (UCT)

# Default options
MYGRID=false          	# Set MYGRID to true if you wish to use your custom grid created by 'makegrid'
INDIR="../MODEL_DATA" 	# Directory of model files to be processed
EXDIR="../OUTPUTS" 	# Root Output directory
PREFIX=""		# Name used for the output directory and appended to the files
USAGE="Usage: cmd [-g GRIDFILE] [-i INDIR] [-o OUTDIR] [-p PREFIX] FILELIST "

if [[ "$#" == 0 ]]
then
   echo "$USAGE"
   exit 1
fi

while getopts "giop:" opt; do
  case ${opt} in
      g ) MYGRID=true 
	  mygridfile=$OPTARG ;;
      i ) INDIR=$OPTARG 
          echo "The input dir = $INDIR" ;;
      o ) EXDIR=$OPTARG ;;
      p ) PREFIX=$OPTARG
          echo "The prefix = $PREFIX" ;;
      \?) echo "$USAGE"
          exit 1;;
  esac
done
shift $(( OPTIND - 1 )) 

if [[ ! -d $EXDIR ]]
then
   echo "The directory ${EXDIR} does not exist. Creating it..."
   mkdir $EXDIR
fi

if [[ ! -d $INDIR ]]
then
   echo "The directory ${INDIR} does not exist. Please use option -i INDIR."
   exit 1
fi

OUTDIR=$EXDIR/$PREFIX
if [[ ! -d $OUTDIR ]]
then
   mkdir $OUTDIR    # Create directory where processed files will go
fi
cd $INDIR

LONLAT="-180,180,-90,90"
GRID="r360x180"
TEMPLATE="template_FeMIP_01.nc"

# Create a once-off horizontal gridding template
cdo -f nc -sellonlatbox,$LONLAT -random,$GRID $TEMPLATE

if [ "$MYGRID" = true ] ; then

# Use the mygrid file

  read line < depth
  numbers=($line)
  LEVELS="$numbers"
  cp ./$mygridfile $OUTDIR/
  chmod 755 mygrid

else

# Create the WOA01 vertical grid

LEVELS="5,10,20,30,50,75,100,125,150,200,250,300,400,500,600,700,800,900,1000,1100,1200,1300,1400,1500,1750,2000,2500,3000,3500,4000,4500,5000,5500"
cat > WOA01 << EOR
zaxistype = depth_below_sea
size = 33
units = m
levels = 0 10 20 30 50 75 100 125 150 200 250 300 400 500 600 700 800 900 1000 1100 1200 1300 1400 1500 1750 2000 2500 3000 3500 4000 4500 5000 5500
EOR
  cp ./WOA01 $OUTDIR/
  chmod 755 WOA01

fi
  
for f in "$@"
do
  echo $f
  cdo -f nc remapnn,$TEMPLATE -intlevel,$LEVELS $f $OUTDIR/$f
  if [ "$MYGRID" = true ] ; then
    cdo -f nc setzaxis,mygrid $OUTDIR/$f $OUTDIR/FeMIP_$f           # Loop over the file(s) and do the interpolation
    mv $INDIR/levels $OUTDIR/
  else
    cdo -f nc setzaxis,WOA01 $OUTDIR/$f $OUTDIR/FeMIP_$f
   fi
  rm $OUTDIR/$f
done

# cleanup
rm WOA01 $TEMPLATE
echo "FeMIP processing completed"


